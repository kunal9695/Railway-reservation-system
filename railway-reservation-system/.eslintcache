[{"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\index.js":"1","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\App.js":"2","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Login.js":"3","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\TrainList.js":"4","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Header.js":"5","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Showcase.js":"6","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Footer.js":"7","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Error.js":"8","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Destinations.js":"9","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Booking.js":"10","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\AddTrain.js":"11","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Search.js":"12","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\BookingList.js":"13","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\PaymentForm.js":"14","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserRegister.js":"15","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserLogin.js":"16","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\SearchService.js":"17","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\PaymentService.js":"18","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\BookService.js":"19","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\history.js":"20","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\AdminHeader.js":"21","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserHeader.js":"22","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserSearch.js":"23","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\auth-header.js":"24","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\auth.service.js":"25"},{"size":307,"mtime":1665902115801,"results":"26","hashOfConfig":"27"},{"size":2101,"mtime":1665902108779,"results":"28","hashOfConfig":"27"},{"size":2984,"mtime":1665906631499,"results":"29","hashOfConfig":"27"},{"size":4804,"mtime":1667969407381,"results":"30","hashOfConfig":"27"},{"size":811,"mtime":1665902614128,"results":"31","hashOfConfig":"27"},{"size":488,"mtime":1664959062375,"results":"32","hashOfConfig":"27"},{"size":197,"mtime":1665903019720,"results":"33","hashOfConfig":"27"},{"size":368,"mtime":1664967095979,"results":"34","hashOfConfig":"27"},{"size":2019,"mtime":1665901856111,"results":"35","hashOfConfig":"27"},{"size":7194,"mtime":1665925630961,"results":"36","hashOfConfig":"27"},{"size":9433,"mtime":1665921140607,"results":"37","hashOfConfig":"27"},{"size":5068,"mtime":1667647546987,"results":"38","hashOfConfig":"27"},{"size":4597,"mtime":1665322700246,"results":"39","hashOfConfig":"27"},{"size":3609,"mtime":1664974430514,"results":"40","hashOfConfig":"27"},{"size":4429,"mtime":1665921605846,"results":"41","hashOfConfig":"27"},{"size":2641,"mtime":1665921810675,"results":"42","hashOfConfig":"27"},{"size":1711,"mtime":1665315827987,"results":"43","hashOfConfig":"27"},{"size":246,"mtime":1663483589187,"results":"44","hashOfConfig":"27"},{"size":303,"mtime":1665314221568,"results":"45","hashOfConfig":"27"},{"size":89,"mtime":1664709888412,"results":"46","hashOfConfig":"27"},{"size":799,"mtime":1665909601434,"results":"47","hashOfConfig":"27"},{"size":878,"mtime":1665922152362,"results":"48","hashOfConfig":"27"},{"size":9650,"mtime":1665924974686,"results":"49","hashOfConfig":"27"},{"size":330,"mtime":1665299373277,"results":"50","hashOfConfig":"27"},{"size":854,"mtime":1665301625399,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1wm9yt6",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\index.js",["117"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Footer from './components/Footer';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n",["118","119"],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\App.js",["120"]," import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Showcase from \"./components/Showcase\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login.js\";\nimport Destinations from \"./components/Destinations\";\nimport Error from \"./components/Error\";\nimport Search from \"./components/Search\";\nimport AddTrain from \"./components/AddTrain\";\nimport TrainList from \"./TrainList\";\nimport Booking from \"./components/Booking\";\nimport UserRegister from \"./components/UserRegister\";\nimport BookingList from \"./components/BookingList\";\nimport PaymentForm from \"./components/PaymentForm\";\nimport UserLogin from \"./components/UserLogin\";\nimport UserSearch from \"./components/UserSearch\"\n\nfunction App() {\n  return (\n    <>\n    <Router>\n \n      <Switch>\n        <Route exact path=\"/\">\n          <Showcase />\n          <Destinations />\n        </Route>\n\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/userregistration\">\n          <UserRegister />\n        </Route>\n\n        <Route path=\"/userlogin\">\n          <UserLogin />\n        </Route>\n\n        <Route exact path=\"/adminTrainList\">\n           <TrainList/>\n        </Route>\n\n        <Route exact path=\"/trainList\">\n          <BookingList></BookingList>\n        </Route>\n\n        <Route exact path=\"/booking\">\n          <Booking></Booking>\n        </Route>\n\n       <Route exact path=\"/edit-train/:id\">\n          <AddTrain/>\n        </Route>\n\n        <Route exact path=\"/addTrain\">\n        <AddTrain/>\n        </Route> \n\n        <Route exact path=\"/search\">\n          <Search />\n        </Route>\n\n        <Route exact path=\"/usersearch\">\n          <UserSearch />\n        </Route>\n\n        <Route path=\"/checkin\">\n          <Booking />\n        </Route>\n\n        <Route exact path=\"/payment\">\n          <PaymentForm></PaymentForm>\n        </Route>\n\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n     \n    </Router>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Login.js",["121","122","123","124","125","126","127","128","129"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component, useContext, useState, Fragment } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport \"./Login.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./Header\";\nimport Admin from \"../assets/Admin.png\"\nimport AuthService from \"../Services/auth.service\";\nimport Kashmir from \"../assets/Kashmir.jpg\"\nimport Tooltip from \"react-bootstrap/Tooltip\"\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\n\n\ntoast.configure()\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"username is required!\"),\n});\n\nconst Login = () => {\n\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"Admin LoggedIn Successfully!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  /**To Show Error Toastify Text */\n  const error = () => {\n    toast.error(\"Invalid Credentials!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  \n  const history = useHistory();\n\n  const login = (userData) => {\n    AuthService.login(userData.username, userData.password)\n      .then(() => {\n        history.push(\"/adminTrainList\");\n        notify();\n        window.location.reload();\n      }).catch((err) => {\n        console.log(err);\n        error();\n        //alert(\"Invalid Credentials\")\n      })\n\n\n  }\n\n  return (\n    <>\n      <Header />\n\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const userData = { ...values };\n            resetForm();\n            // notify();\n            login(userData);\n          } catch (err) {\n            // error();\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"booking-container\">\n              <h1 className=\"booking\">ADMIN LOGIN</h1>\n              <img src = {Admin} style={{width : 250,  height: 250, marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n              <hr></hr>\n              <div className=\"inner\">\n                <label ><b>User Name</b></label>\n                <Field name=\"username\" type=\"text\" placeholder=\"Enter username\"  />\n                <label><b>Password</b></label>\n                <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n                <button\n                  className=\"btn btn-success\" \n                  type=\"submit\"\n                  onClick={() => { }}\n                >\n                  Sign In\n                </button>\n              </div>\n            </div>\n          </Form>\n\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default Login;","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\TrainList.js",["130","131","132","133","134","135","136"],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Header.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Showcase.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Footer.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Error.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Destinations.js",["137"],"import React from 'react'\nimport duronto from '../assets/duronto_express.jpeg'\nimport goldenchariot from '../assets/goldenchariot.jpg'\nimport rajdhani from '../assets/rajdhani.jpg'\nimport Footer from './Footer'\n\nconst Destinations = () => {\n  return (\n    <>\n    <section className='destinations'>\n      <h3>Book Your Trains</h3>\n      <div className='grid'>\n        <div>\n          <a href='https://www.yatra.com/indian-railways/duronto-express-12246-train'><img src={duronto} alt='destination-1' /></a>\n          <h3>Duronto Express</h3>\n          <p>\n          Duronto Express is a category of long-distance non-stop source to destination trains run by the Indian Railways. Initially these trains did not have any ticketing stops between the origin and the destination, but since January 2016 it is possible to book tickets from those technical stops. \"Duronto\" means \"very fast\" in Bengali.\n          </p>\n        </div>\n\n        <div>\n          <a href='https://www.goldenchariot.org/book/bookticket'><img src={goldenchariot} alt='destination-2' /></a>\n          <h3>Golden Chariot</h3>\n          <p>\n          The Golden Chariot is a luxury tourist train that connects the important tourist spots in the Indian states of Karnataka, Goa, Kerala & Tamil Nadu as well as Pondicherry, depending on the selected itinerary. It is named after the Stone Chariot in the Vitthala Temple at Hampi.\n          </p>\n        </div>\n\n        <div>\n          <a href='https://www.yatra.com/indian-railways/rajdhani-express-12433-train'><img src={rajdhani} alt='destination-3' /></a>\n          <h3>Rajdhani Express</h3>\n          <p>\n          The Rajdhani Express is a series of passenger train service in India operated by Indian Railways connecting the national capital New Delhi with the capitals or largest city of various states. The word Rajdhani has been derived from the Devanagri script, which means Capital in English.\n          </p>\n        </div>\n      </div>\n    </section>\n    </>\n  )\n}\n\nexport default Destinations\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Booking.js",["138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport BookService from \"../Services/BookService\";\nimport { Button, Modal, Input } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Booking.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./UserHeader\";\n\n\n\ntoast.configure();\n\n\nconst Booking = () => {\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success({\n      position: \"top-center\",\n      autoClose: false,\n    });\n  };\n  const [id, setid] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [age, setage] = useState(\"\");\n  const [sex, setsex] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [trainNo, settrainNo] = useState(localStorage.getItem('trainNo'));\n  const [trainName, settrainName] = useState(localStorage.getItem('trainName'));\n  const [sourceStation, setsourceStation] = useState(localStorage.getItem('sourceStation'));\n  const [destinationStation, setdestinationStation] = useState(localStorage.getItem('destinationStation'));\n  const [classType, setclassType] = useState(\"\");\n  const [adults, setadults] = useState(\"\");\n  const [children, setchildren] = useState(\"\");\n  const [payment, setpayment] = useState(4000);\n  const [pnrNo, setpnrNo] = useState(\"\");\n  const history = useHistory();\n\n \n  const bookTrain = (e) => {\n    e.preventDefault();\n    const UserDetails = {\n      id,\n      name,\n      age,\n      sex,\n      address,\n      trainNo,\n      trainName,\n      sourceStation,\n      destinationStation,\n      classType,\n      adults,\n      children,\n      pnrNo,\n      payment,\n    };\n\n    BookService.bookTrain(UserDetails)\n      .then((response) => {\n        var e = JSON.stringify(response.data);\n         alert(\"your pnrNo is:\" + response.data.pnrNo);\n         localStorage.setItem(\"pnrNo\", response.data.pnrNo);\n        console.log(response);\n        console.log(response.data.pnrNo);\n        history.push(\"/payment\");\n      })\n      .catch((error) => {\n        alert(\"Train no. is not valid.\")\n        console.log(error);\n      });\n  };\n  return (\n    <>\n    <Header/>\n    <form>\n      <div className=\"booking-container\">\n        <h1 className=\"booking\">BOOKING FORM</h1>\n        <hr></hr>\n        <p className=\"instruction\">\n          Please fill in this form to book a train ticket.\n        </p>\n        <div className=\"form-booking\">\n          <label>\n            <b>Name</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter Your Name\"\n            required\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Age</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"Age\"\n            id=\"age\"\n            placeholder=\"Enter Your Age\"\n            required\n            value={age}\n            onChange={(e) => setage(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Gender</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"sex\"\n            id=\"sex\"\n            placeholder=\"Enter Your Gender\"\n            required\n            value={sex}\n            onChange={(e) => setsex(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Address</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"address\"\n            id=\"address\"\n            placeholder=\"Enter Your Address\"\n            required\n            value={address}\n            onChange={(e) => setaddress(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Train No</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"trainNo\"\n            id=\"trainNo\"\n            placeholder=\"Enter Your TrainNo\"\n            required\n            value={trainNo}\n           // onChange={(e) => settrainNo(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Train Name</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"trainName\"\n            id=\"trainName\"\n            placeholder=\"Enter Your TrainName\"\n            required\n            value={trainName}\n           // onChange={(e) => settrainName(e.target.value)}\n          ></input>\n\n          <label for=\"sourceStation\">\n            <b>Source Station</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"sourceStation\"\n            id=\"sourceStation\"\n            placeholder=\"Enter Your SourceStation\"\n            required\n            value={sourceStation}\n           // onChange={(e) => setsourceStation(e.target.value)}\n          ></input>\n\n          <label for=\"destinationStation\">\n            <b>Destination Station</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"destinationStation\"\n            id=\"destinationStation\"\n            placeholder=\"Enter Your DestinationStation\"\n            required\n            value={destinationStation}\n            //onChange={(e) => setdestinationStation(e.target.value)}\n          ></input>\n\n          <label for=\"classType\">\n            <b>ClassType</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"classType\"\n            id=\"classType\"\n            placeholder=\"Enter Your ClassType\"\n            required\n            value={classType}\n            onChange={(e) => setclassType(e.target.value)}\n          ></input>\n\n          <label for=\"adults\">\n            <b>Adults</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"adults\"\n            id=\"adults\"\n            placeholder=\"Enter Your Adults\"\n            required\n            value={adults}\n            onChange={(e) => setadults(e.target.value)}\n          ></input>\n\n          <label for=\"children\">\n            <b>Children</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"children\"\n            id=\"children\"\n            placeholder=\"Enter Your Children\"\n            required\n            value={children}\n            onChange={(e) => setchildren(e.target.value)}\n          ></input>\n\n          {/* <label for=\"payment\">\n            <b>Payment</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"payment\"\n            id=\"payment\"\n            placeholder=\"Enter Your Payment\"\n            required\n            value={payment}\n            onChange={(e) => setpayment(e.target.value)}\n          ></input> */}\n\n          <hr></hr>\n          <Link\n            className=\"btn btn-success\"\n            onClick={(e) => {\n              bookTrain(e);\n            }}\n          >\n            BOOK{\" \"}\n          </Link>\n          {/* <button type=\"submit\" className=\"btn btn-danger\">{\" \"}Cancel{\" \"}</button>\n          <Link className=\"btn btn-info\" to=\"/payment\">\n            {\" \"}\n            Proceed To Payment{\" \"}\n          </Link> */}\n          <ToastContainer />\n        </div>\n      </div>\n    </form>\n    <br></br><br></br><br></br><br></br>\n    </>\n  );\n};\n\nexport default Booking;\n\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\AddTrain.js",["151"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AdminHeader from \"./AdminHeader.js\";\nimport SearchService from \"../Services/SearchService.js\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst AddTrain = () => {\n  /**To Show Add Train Toastify Text */\n  const notify = () => {\n    toast(\"Train Added Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  }\n  const notify1 = () => {\n    toast(\"Train Updated Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  }\n  const error = () => {\n    toast.error(\"Something wrong in data\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n\n\n  };\n  const [trainNo, settrainNo] = useState(\"\");\n  const [trainName, settrainName] = useState(\"\");\n  const [sourceStation, setsourceStation] = useState(\"\");\n  const [destinationStation, setdestinationStation] = useState(\"\");\n  const [arrivalTime, setarrivalTime] = useState(\"\");\n  const [deptTime, setdeptTime] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [noOfSeats, setnoOfSeats] = useState(\"\");\n  const [firstClassACFare, setfirstClassACFare] = useState(\"\");\n  const [twoTierAcFare, settwoTierAcFare] = useState(\"\");\n  const [threeTierAcFare, setthreeTierAcFare] = useState(\"\");\n  const [sleeperFare, setsleeperFare] = useState(\"\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const saveOrUpdateTrains = (e) => {\n    e.preventDefault();\n    const TrainDetails = {\n      trainNo,\n      trainName,\n      sourceStation,\n      destinationStation,\n      arrivalTime,\n      deptTime,\n      duration,\n      noOfSeats,\n      firstClassACFare,\n      twoTierAcFare,\n      threeTierAcFare,\n      sleeperFare,\n    };\n    if (id) {\n      SearchService.updateTrain(id, TrainDetails)\n        .then((response) => {\n          alert(\"Your Train has been updated\");\n          notify1();\n          history.push(\"/adminTrainList\");\n        })\n        .catch((err) => {\n          console.log(err);\n          error();\n          //alert(\"Something wrong in data\")\n        });\n    } else {\n      SearchService.addTrain(TrainDetails)\n        .then((response) => {\n          console.log(response.data)\n          notify();\n          history.push(\"/adminTrainList\");\n        })\n        .catch((err) => {\n          console.log(err);\n          error();\n        });\n    }\n  };\n\n\n  \n  \n\n  const title = () => {\n    if (id) {\n      return <h2 className=\"text-center\">Update Train</h2>;\n    } else {\n      return <h2 className=\"text-center\">Add Train</h2>;\n    }\n  };\n  return (\n    <div>\n      <AdminHeader />\n      <br></br>\n      <br></br>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n            {title()}\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">TrainNo</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Train Number\"\n                    name=\"trainNo\"\n                    className=\"form-control\"\n                    value={trainNo}\n                    onChange={(e) => settrainNo(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Train Name</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Train Name\"\n                    name=\"trainName\"\n                    className=\"form-control\"\n                    value={trainName}\n                    onChange={(e) => settrainName(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Source Station</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter start point\"\n                    name=\"sourceStation\"\n                    className=\"form-control\"\n                    value={sourceStation}\n                    onChange={(e) => setsourceStation(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Destination Station</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter end point\"\n                    name=\"destinationStation\"\n                    className=\"form-control\"\n                    value={destinationStation}\n                    onChange={(e) => setdestinationStation(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">ArrivalTime</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Arrival Time\"\n                    name=\"arrivalTime\"\n                    className=\"form-control\"\n                    value={arrivalTime}\n                    onChange={(e) => setarrivalTime(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">DeptTime</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Departure Time\"\n                    name=\"deptTime\"\n                    className=\"form-control\"\n                    value={deptTime}\n                    onChange={(e) => setdeptTime(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Duration</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Duration\"\n                    name=\"duration\"\n                    className=\"form-control\"\n                    value={duration}\n                    onChange={(e) => setduration(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">NoOfSeats</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Number of seats\"\n                    name=\"noOfSeats\"\n                    className=\"form-control\"\n                    value={noOfSeats}\n                    onChange={(e) => setnoOfSeats(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">firstClassACFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter FirstClass AC Fare\"\n                    name=\"firstClassACFare\"\n                    className=\"form-control\"\n                    value={firstClassACFare}\n                    onChange={(e) => setfirstClassACFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">TwoTierAcFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter TwoTier AC Fare\"\n                    name=\"twoTierAcFare\"\n                    className=\"form-control\"\n                    value={twoTierAcFare}\n                    onChange={(e) => settwoTierAcFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">ThreeTierAcFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter ThreeTier AC Fare\"\n                    name=\"threeTierAcFare\"\n                    className=\"form-control\"\n                    value={threeTierAcFare}\n                    onChange={(e) => setthreeTierAcFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">sleeperFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter SleeperFare\"\n                    name=\"sleeperFare\"\n                    className=\"form-control\"\n                    value={sleeperFare}\n                    onChange={(e) => setsleeperFare(e.target.value)}\n                  ></input>\n                </div>\n                <Link\n                  onClick={(e) => {\n                    saveOrUpdateTrains(e);\n                  }}\n                  to=\"/adminTrainList\"\n                  className=\"btn btn-success\"\n                >\n                  {\" \"}\n                  Submit{\" \"}\n                </Link>\n                <Link to=\"/adminTrainList\" className=\"btn btn-danger\" style={{ marginLeft: 5 }}>\n                  {\" \"}\n                  Cancel{\" \"}\n                </Link>\n              \n              </form>\n              \n            </div>\n            \n          </div>\n          \n        </div>\n        <br></br><br></br><br></br><br></br><br></br><br></br>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTrain;\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\Search.js",["152","153","154"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchService from \"../Services/SearchService\";\nimport \"./Search.css\";\nimport Header from \"./Header\";\n\n\nconst Search = () => {\n  const [Trains, setTrains] = useState([]);\n  const [sourceStation, setsourceStation] = useState(\"\");\n  const [destinationStation, setdestinationStation] = useState(\"\");\n\n  const searchTrain = (e) => {\n    e.preventDefault();\n\n    SearchService.getTrainsByRoute(sourceStation, destinationStation)\n      .then((response) => {\n        var e = JSON.stringify(response.data);\n        console.log(response);\n        setTrains(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n    <Header/>\n    <form>\n      <div className=\"search-container\">\n        <h1 className=\"searching\">SEARCH TRAINS</h1>\n        <hr></hr>\n        <div className=\"form-searching\">\n          <input\n            type=\"text\"\n            name=\"sourceStation\"\n            id=\"sourceStation\"\n            placeholder=\"Enter Start Station\"\n            value={sourceStation}\n            onChange={(e) => setsourceStation(e.target.value)}\n            required\n          ></input>\n\n          <input\n            type=\"text\"\n            placeholder=\"Enter End Station\"\n            name=\"destinationStation\"\n            id=\"destinationStation\"\n            value={destinationStation}\n            onChange={(e) => setdestinationStation(e.target.value)}\n            required\n          ></input>\n          <hr></hr>\n          <button className=\"btn btn-success button1\" onClick={(e) => searchTrain(e)}>\n            Search Trains\n          </button>\n        </div>\n      </div>\n\n      <div class=\"container \">\n        <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\n          <div class=\"row \">\n            <div\n              class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\n              style={{ color: \"#D2691E\" }}\n            >\n              <h3>\n                <b>LIST OF TRAINS AVAILABLE</b>\n              </h3>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"table-responsive \">\n              <table class=\"table table-striped table-hover table-bordered\">\n                <thead>\n                  <tr>\n                    <th>TrainNo </th>\n                    <th>TrainName </th>\n                    <th>SourceStation </th>\n                    <th>DestinationStation </th>\n                    <th>ArrivalTime </th>\n                    <th>DepartureTime </th>\n                    <th>Duration </th>\n                    <th>NoOfSeats </th>\n                    <th>FirstClass </th>\n                    <th>SecondClass </th>\n                    <th>ThirdClass </th>\n                    <th>Sleeper </th>\n                    <th>Actions </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Trains.map((TrainDetails) => (\n                    <tr key={TrainDetails.trainNo}>\n                      <td> {TrainDetails.trainNo} </td>\n                      <td> {TrainDetails.trainName} </td>\n                      <td> {TrainDetails.sourceStation} </td>\n                      <td>{TrainDetails.destinationStation}</td>\n                      <td>{TrainDetails.arrivalTime}</td>\n                      <td>{TrainDetails.deptTime}</td>\n                      <td>{TrainDetails.duration}</td>\n                      <td>{TrainDetails.noOfSeats}</td>\n                      <td> {TrainDetails.firstClassACFare} </td>\n                      <td> {TrainDetails.twoTierAcFare} </td>\n                      <td> {TrainDetails.threeTierAcFare} </td>\n                      <td> {TrainDetails.sleeperFare} </td>\n                      <td>\n                        {\" \"}\n                        <Link className=\"btn btn-info\" to=\"/userlogin\">\n                          {\" \"}\n                          Book{\" \"}\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* <!--- Model Box ---> */}\n          <div className=\"model_box\">\n            <Modal\n              show={show}\n              onHide={handleClose}\n              backdrop=\"static\"\n              keyboard={false}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title></Modal.Title>\n              </Modal.Header>\n              <Modal.Body></Modal.Body>\n\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n\n            {/* Model Box Finish*/}\n          </div>\n        </div>\n      </div>\n    </form>\n    </>\n  );\n};\n\nexport default Search;\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\BookingList.js",["155","156","157","158"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, Input } from \"react-bootstrap\";\nimport SearchService from \"../Services/SearchService\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure()\n\nconst BookingList = () => {\n\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"Train Updated Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  };\n\n  const [Trains, setTrains] = useState([]);\n  useEffect(() => {\n    getAllTrainsUsers();\n  }, []);\n\n  const getAllTrainsUsers = () => {\n    SearchService.getAllTrainsUsers()\n      .then((response) => {\n        setTrains(response.data);\n        console.log(response.date);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div class=\"container \">\n      <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\n        <div class=\"row \">\n          <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\n            <div className=\"search\">\n              <form class=\"form-inline\">\n                <input\n                  class=\"form-control mr-sm-2\"\n                  type=\"search\"\n                  placeholder=\"Search Train\"\n                  aria-label=\"Search\"\n                />\n              </form>\n            </div>\n          </div>\n          <div\n            class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\n            style={{ color: \"#D2691E\" }}\n          >\n            <h2>\n              <b>LIST OF TRAINS AVAILABLE</b>\n            </h2>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"table-responsive \">\n            <table class=\"table table-striped table-hover table-bordered\">\n              <thead>\n                <tr>\n                  <th>TrainNo </th>\n                  <th>TrainName </th>\n                  <th>SourceStation </th>\n                  <th>DestinationStation </th>\n                  <th>ArrivalTime </th>\n                  <th>DepartureTime </th>\n                  <th>Duration </th>\n                  <th>NoOfSeats </th>\n                  <th>FirstClass </th>\n                  <th>SecondClass </th>\n                  <th>ThirdClass </th>\n                  <th>Sleeper </th>\n                  <th>Actions </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Trains.map((TrainDetails) => (\n                  <tr key={TrainDetails.trainNo}>\n                    <td> {TrainDetails.trainNo} </td>\n                    <td> {TrainDetails.trainName} </td>\n                    <td> {TrainDetails.sourceStation} </td>\n                    <td>{TrainDetails.destinationStation}</td>\n                    <td>{TrainDetails.arrivalTime}</td>\n                    <td>{TrainDetails.deptTime}</td>\n                    <td>{TrainDetails.duration}</td>\n                    <td>{TrainDetails.noOfSeats}</td>\n                    <td> {TrainDetails.firstClassACFare} </td>\n                    <td> {TrainDetails.twoTierAcFare} </td>\n                    <td> {TrainDetails.threeTierAcFare} </td>\n                    <td> {TrainDetails.sleeperFare} </td>\n                    <td>\n                      {\" \"}\n                      {/* <Link className=\"btn btn-info\" to=\"/booking\">\n                   {\" \"}\n                   Book{\" \"}\n                   </Link> */}\n                      {/* <button style={{ backgroundColor: 'blue', color: 'White' }} onClick=\"location.href = '/booking'\">\n                        Book1\n                      </button> */}\n                    </td>\n                  </tr>\n                ))}\n\n              </tbody>\n            </table>\n            <ToastContainer />\n          </div>\n        </div>\n\n        {/* <!--- Model Box ---> */}\n        <div className=\"model_box\">\n          <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n            </Modal.Header>\n            <Modal.Body>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          {/* Model Box Finish*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingList; ","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\PaymentForm.js",["159","160"],"import React, { useEffect, useState } from 'react'\nimport PaymentService from '../Services/PaymentService'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport Header from './UserHeader';\n\n\n\nconst PaymentForm = () => {\n\n  const [pnrNo, setpnrNo] = useState('')\n  const [bankName, setbankName] = useState('')\n  const [cardNo, setcardNo] = useState('')\n  const [cvv, setcvv] = useState('')\n  const [classType, setclassType] = useState('')\n  const history = useHistory();\n\n  useEffect ( () => {\n    const pnr = localStorage.getItem(\"pnrNo\");\n    setpnrNo(pnr);\n  },[]);\n\n  const makePayment = (e) => {\n    e.preventDefault();\n    const PaymentDetails = { pnrNo, bankName, cardNo, cvv, classType }\n\n    PaymentService.makePayment(PaymentDetails).then((response) => {\n      var e = JSON.stringify(response.data);\n      alert(e);\n      console.log(response);\n      history.push('/paymentSucessful')\n    }).catch(error => {\n      console.log(error)\n    })\n\n\n  }\n  return (\n    <>\n      <Header />\n      <div>\n        <br></br>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n              <br></br><br></br>\n              <h2 className=\"text-center\">Payment</h2>\n              <div className=\"card-body\">\n                <form>\n                  <div className=\"form-group mb-2\">\n                    <label className=\"form-label\">PNR NO</label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter PNR No\"\n                      name=\"pnrNo\"\n                      className=\"form-control\"\n                      value={pnrNo}\n                    //onChange={(e) => setpnrNo(e.target.value)}\n                    >\n                    </input>\n\n                  </div>\n                  <div className=\"form-group mb-2\">\n                    <label className=\"form-label\">BankName</label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter Bank Name\"\n                      name=\"bankName\"\n                      className=\"form-control\"\n                      value={bankName}\n                      onChange={(e) => setbankName(e.target.value)}>\n                    </input>\n\n                  </div>\n                  <div className=\"form-group mb-2\">\n                    <label className=\"form-label\">Card No</label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter card No\"\n                      name=\"cardNo\"\n                      className=\"form-control\"\n                      value={cardNo}\n                      onChange={(e) => setcardNo(e.target.value)}>\n                    </input>\n\n                  </div>\n\n                  <div className=\"form-group mb-2\">\n                    <label className=\"form-label\">CVV</label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter cvv\"\n                      name=\"cvv\"\n                      className=\"form-control\"\n                      value={cvv}\n                      onChange={(e) => setcvv(e.target.value)}>\n                    </input>\n\n                  </div>\n\n                  <Link className=\"btn btn-success\" onClick={(e) => makePayment(e)} >Pay</Link>\n                  <button to=\"/login\" className=\"btn btn-danger\"> Cancel </button>\n                </form>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n        <br></br>\n      </div>\n    </>\n  )\n\n}\nexport default PaymentForm\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserRegister.js",["161","162","163","164","165"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserRegister.css\";\nimport userregister from '../assets/userregister.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _get from \"lodash.get\";\nimport history from '../history'\nimport Header from \"./Header\";\nimport Admin from \"../assets/Admin.png\"\n\n\ntoast.configure()\n\n\n\n/**To Show Add Toastify Text */\nconst notify = () => {\n  toast.success('User Added Successfully!!',\n    {\n      position: \"top-center\",\n      autoClose: 3000\n    });\n\n}\n\nconst error = () => {\n  toast.error(\"UserName already taken.\", {\n    position: \"top-center\",\n    autoClose: 2000,\n  });\n};\n\nconst error1 = () => {\n  toast.error(\"Email already taken.\", {\n    position: \"top-center\",\n    autoClose: 2000,\n  });\n};\n\n\nexport default class UserRegister extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n    };\n    this.register = this.register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n\n  register(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/api/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        roles: [\"user\"]\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.message === \"User registered successfully!\") {\n          notify();\n          history.push(\"/userlogin\");\n          window.location.reload()\n        }\n        else if (response.message === \"Error: Username is already taken!\") {\n          error();\n        }\n        else if (response.message === \"Error: Email is already in use!\") {\n          error1();\n        }\n        else {\n          alert(\"Please enter valid details:UserName should be between 5 to 20, Email should be valid, Password should be between 5 to 20 characters.\");\n        }\n      })\n  }\n\n\n  handleChange(changeObject) {\n    this.setState(changeObject);\n  }\n\n  render() {\n    return (\n      <>\n        <Header></Header>\n        <form>\n          <div className=\"userlogin-container\">\n            <h2 className=\"user-panel\">USER REGISTRATION</h2>\n            <img src = {Admin} style={{width : 250,  height: 250, marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n            <hr></hr>\n            <div className=\"userregisterform\">\n              <label><b>UserName</b></label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter username\"\n                onChange={(e) => this.handleChange({ username: e.target.value })}\n              />\n              <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n            </div>\n\n            <div className=\"userregisterform\">\n              <label><b>Email</b></label>\n              <input\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                onChange={(e) => this.handleChange({ email: e.target.value })}\n              />\n              <p style={{ color: \"red\" }}>{this.state.emailError}</p>\n            </div>\n\n            <div className=\"userregisterform\">\n              <label><b>Password</b></label>\n              <input\n                type=\"password\"\n                placeholder=\"Enter password\"\n                onChange={(e) => this.handleChange({ password: e.target.value })}\n              />\n              <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\n            </div>\n\n            <div className=\"userregisterform\">\n              <Link \n                type=\"submit\"\n                className=\"btn btn-success register-1\"\n                to=\"/search\"\n                onClick={(e) => { this.register(e); }}\n              >\n                Register\n              </Link>\n              <ToastContainer />\n            </div>\n            <p className=\"text-center\">\n              Have an account? <Link to=\"/userlogin\">Login Here</Link>\n            </p>\n          </div>\n        </form>\n        <br></br><br></br><br></br><br></br><br></br>\n      </>\n    );\n  }\n}\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserLogin.js",["166","167","168","169","170","171","172","173"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component, useContext, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport \"./UserLogin.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./Header\"\nimport AuthService from \"../Services/auth.service\"\nimport history from \"../history\"\nimport Admin from '../assets/Admin.png'\n\ntoast.configure()\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"username is required!\"),\n});\n\nconst UserLogin = () => {\n\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"User LoggedIn Successfully!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  const error = () =>\n  {\n    toast.error(\"Invalid Credentials!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  const login = (userData) => {\n    AuthService.login(userData.username, userData.password)\n      .then(() => {\n        history.push(\"/usersearch\");\n        notify();\n        window.location.reload();\n      }).catch((err) => {\n        console.log(err);\n        error();\n        //alert(\"Invalid Credentials\")\n      })\n\n  };\n\n \n\n  return (\n    <>\n    <Header />\n    <Formik\n    initialValues={{\n      username: \"\",\n      password: \"\",\n    }}\n    validationSchema={LoginSchema}\n    onSubmit={async (values, { resetForm }) => {\n      try {\n        const userData = { ...values };\n        resetForm();\n       // notify();\n        login(userData);\n      } catch (err) {\n        console.error(err);\n      }\n    }}\n  >\n    {() => (\n      <Form>\n         <div className=\"user-container\">\n         <h1 className=\"user\">USER LOGIN</h1>\n         <img src = {Admin} style={{width : 250,  height: 250, marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n         <hr></hr>\n          <div className=\"inner\">\n            <label><b>User Name</b></label>\n            <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\n            <label><b>Password</b></label>\n            <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n            <button\n              className=\"btn btn-success\"\n              type=\"submit\"\n              onClick={() => {}}\n            >\n              Login\n            </button>\n          </div>\n        </div>\n      </Form>\n    )}\n  </Formik>\n  </>\n);\n};\n\nexport default UserLogin;\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\SearchService.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\PaymentService.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\BookService.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\history.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\AdminHeader.js",["174"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Login.css'\r\nimport authService from '../Services/auth.service'\r\nimport { Button } from 'bootstrap'\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <header className='header'>\r\n      <div>\r\n        <Link className='links' to='/adminTrainList'>\r\n          Indian Railway\r\n        </Link>\r\n      </div>\r\n      <nav className='navbar'>\r\n        <ul>\r\n          <Link className='links' to='/adminTrainList'>\r\n            Home\r\n          </Link>\r\n          <button style = {{backgroundColor: 'black', color: 'white', border:'none', marginRight:50, marginLeft:0}}  onClick= {() => authService.logout()}>\r\n            Logout\r\n          </button>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserHeader.js",["175"],"import { Button } from 'bootstrap'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport authService from '../Services/auth.service'\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n\r\n    <header className='header'>\r\n      <div>\r\n        <Link className='links' to='/usersearch'>\r\n          Indian Railway\r\n        </Link>\r\n      </div>\r\n      <nav className='navbar'>\r\n        <ul>\r\n          <Link className='links' to='/usersearch'>\r\n            Home\r\n          </Link>\r\n\r\n          <Link className='links' to='/usersearch'>\r\n            Search\r\n          </Link>\r\n          \r\n          <button style = {{backgroundColor: 'black', color: 'white', border:'none', marginRight:50, marginLeft:0}}  onClick= {() => authService.logout()}>\r\n            Logout\r\n          </button>\r\n     \r\n\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\components\\UserSearch.js",["176","177","178","179","180","181"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport SearchService from \"../Services/SearchService\";\r\nimport \"./Search.css\";\r\nimport Header from \"./UserHeader\";\r\nimport history from \"../history\";\r\nimport { Select } from \"antd\";\r\n\r\n\r\nconst UserSearch = () => {\r\n    const [Trains, setTrains] = useState([]);\r\n    const [sourceStation, setsourceStation] = useState(\"\");\r\n    const [destinationStation, setdestinationStation] = useState(\"\");\r\n\r\n    const searchTrain = (e) => {\r\n        e.preventDefault();\r\n\r\n        SearchService.getTrainsByRoute(sourceStation, destinationStation)\r\n            .then((response) => {\r\n                var e = JSON.stringify(response.data);\r\n                console.log(response);\r\n                setTrains(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(\"Train not available.\")\r\n            });\r\n    };\r\n\r\n    const direct = (TrainDetails) => {\r\n        const user = localStorage.getItem('user');\r\n        console.log(user)\r\n        if (user) {\r\n\r\n            localStorage.setItem('trainNo', TrainDetails.trainNo);\r\n            localStorage.setItem('trainName', TrainDetails.trainName);\r\n            localStorage.setItem('sourceStation', TrainDetails.sourceStation);\r\n            localStorage.setItem('destinationStation', TrainDetails.destinationStation);\r\n            history.push(\"/booking\")\r\n        }\r\n        else {\r\n            history.push(\"/userlogin\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var count = 0;\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <>\r\n            <Header />\r\n            <form>\r\n                <div className=\"search-container\">\r\n                    <h1 className=\"searching\">SEARCH TRAINS</h1>\r\n                    <hr></hr>\r\n                    <div className=\"form-searching\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"sourceStation\"\r\n                            id=\"sourceStation\"\r\n                            placeholder=\"Enter Start Station\"\r\n                            value={sourceStation}\r\n                            onChange={(e) => setsourceStation(e.target.value)}\r\n                            required\r\n                        ></input>\r\n                        {/* <label>Choose sourceStation : </label>\r\n                        <select id = \"location\">\r\n                            <option id = \"Delhi\">Delhi</option>\r\n                            <option id = \"Lucknow\">Lucknow</option>\r\n                            <option id = \"Kashmir\">Kashmir</option>\r\n                            <option id = \"Kanyakumari\">Kanyakumari</option>\r\n                            <option id = \"Mumbai\">Mumbai</option>\r\n                            <option id = \"Bengaluru\">Bengaluru</option>\r\n                            <option id = \"Chennai\">Chennai</option>\r\n                            <option id = \"Kolkata\">Kolkata</option>\r\n                        </select> */}\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter End Station\"\r\n                            name=\"destinationStation\"\r\n                            id=\"destinationStation\"\r\n                            value={destinationStation}\r\n                            onChange={(e) => setdestinationStation(e.target.value)}\r\n                            required\r\n                        ></input>\r\n                        <hr></hr>\r\n                        <button className=\"btn btn-success button1\" onClick={(e) => searchTrain(e)}>\r\n                            Search Trains\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div class=\"container\">\r\n                    <div className=\"search search1 crud shadow-lg p-3 mb-5 mt-5 bg-body rounded col-sm-3 mt-5 mb-4 text-gred text-center\">\r\n                        <form class=\"form-inline\">\r\n                            <input\r\n                                class=\"form-control mr-sm-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search By PNR\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                        </form>\r\n                        <button className=\"btn btn-success mt-2\">Search</button>\r\n                    </div>\r\n                </div> */}\r\n\r\n\r\n                <div class=\"container \">\r\n                    <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\r\n                        <div class=\"row \">\r\n                            <div\r\n                                class=\"col-lg-8 offset-sm-2 mt-5 mb-4 \"\r\n                                style={{ color: \"#D2691E\", marginLeft: 450 }}\r\n                            >\r\n                                <h3>\r\n                                    <b>LIST OF TRAINS AVAILABLE</b>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"table-responsive \">\r\n                                <table class=\"table table-striped table-hover table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>TrainNo </th>\r\n                                            <th>TrainName </th>\r\n                                            <th>SourceStation </th>\r\n                                            <th>DestinationStation </th>\r\n                                            <th>ArrivalTime </th>\r\n                                            <th>DepartureTime </th>\r\n                                            <th>Duration </th>\r\n                                            <th>NoOfSeats </th>\r\n                                            <th>FirstClass </th>\r\n                                            <th>SecondClass </th>\r\n                                            <th>ThirdClass </th>\r\n                                            <th>Sleeper </th>\r\n                                            <th>Actions </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Trains.map((TrainDetails) => (\r\n                                            <tr id={count++} key={TrainDetails.trainNo}>\r\n                                                <td> {TrainDetails.trainNo} </td>\r\n                                                <td> {TrainDetails.trainName} </td>\r\n                                                <td> {TrainDetails.sourceStation} </td>\r\n                                                <td>{TrainDetails.destinationStation}</td>\r\n                                                <td>{TrainDetails.arrivalTime}</td>\r\n                                                <td>{TrainDetails.deptTime}</td>\r\n                                                <td>{TrainDetails.duration}</td>\r\n                                                <td>{TrainDetails.noOfSeats}</td>\r\n                                                <td> {TrainDetails.firstClassACFare} </td>\r\n                                                <td> {TrainDetails.twoTierAcFare} </td>\r\n                                                <td> {TrainDetails.threeTierAcFare} </td>\r\n                                                <td> {TrainDetails.sleeperFare} </td>\r\n                                                <td>\r\n                                                    {\" \"}\r\n\r\n                                                    <button style={{ backgroundColor: 'dodgerblue', color: 'White', borderColor: 'white', marginLeft: 0 }} onClick={() => direct(TrainDetails)}>\r\n                                                        Book\r\n                                                    </button>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <!--- Model Box ---> */}\r\n                        <div className=\"model_box\">\r\n                            <Modal\r\n                                show={show}\r\n                                onHide={handleClose}\r\n                                backdrop=\"static\"\r\n                                keyboard={false}\r\n                            >\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title></Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body></Modal.Body>\r\n\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Close\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n                            {/* Model Box Finish*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserSearch;\r\n","C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\auth-header.js",[],"C:\\Users\\kunal\\OneDrive\\Documents\\railway-reservation-system\\src\\Services\\auth.service.js",[],{"ruleId":"182","severity":1,"message":"183","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":14},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"182","severity":1,"message":"190","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":2,"column":17,"nodeType":"184","messageId":"185","endLine":2,"endColumn":26},{"ruleId":"182","severity":1,"message":"192","line":2,"column":28,"nodeType":"184","messageId":"185","endLine":2,"endColumn":38},{"ruleId":"182","severity":1,"message":"193","line":2,"column":40,"nodeType":"184","messageId":"185","endLine":2,"endColumn":48},{"ruleId":"182","severity":1,"message":"194","line":4,"column":22,"nodeType":"184","messageId":"185","endLine":4,"endColumn":33},{"ruleId":"182","severity":1,"message":"195","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":12},{"ruleId":"182","severity":1,"message":"196","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"197","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":15},{"ruleId":"182","severity":1,"message":"198","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":87,"column":15,"nodeType":"201","endLine":87,"endColumn":111},{"ruleId":"182","severity":1,"message":"202","line":4,"column":18,"nodeType":"184","messageId":"185","endLine":4,"endColumn":23},{"ruleId":"182","severity":1,"message":"203","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":16},{"ruleId":"182","severity":1,"message":"196","line":11,"column":8,"nodeType":"184","messageId":"185","endLine":11,"endColumn":15},{"ruleId":"182","severity":1,"message":"204","line":12,"column":9,"nodeType":"184","messageId":"185","endLine":12,"endColumn":16},{"ruleId":"182","severity":1,"message":"205","line":18,"column":9,"nodeType":"184","messageId":"185","endLine":18,"endColumn":15},{"ruleId":"182","severity":1,"message":"206","line":61,"column":10,"nodeType":"184","messageId":"185","endLine":61,"endColumn":14},{"ruleId":"182","severity":1,"message":"207","line":62,"column":9,"nodeType":"184","messageId":"185","endLine":62,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"208","line":2,"column":22,"nodeType":"184","messageId":"185","endLine":2,"endColumn":31},{"ruleId":"182","severity":1,"message":"209","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":16},{"ruleId":"182","severity":1,"message":"202","line":4,"column":18,"nodeType":"184","messageId":"185","endLine":4,"endColumn":23},{"ruleId":"182","severity":1,"message":"210","line":4,"column":25,"nodeType":"184","messageId":"185","endLine":4,"endColumn":30},{"ruleId":"182","severity":1,"message":"205","line":18,"column":9,"nodeType":"184","messageId":"185","endLine":18,"endColumn":15},{"ruleId":"182","severity":1,"message":"211","line":24,"column":14,"nodeType":"184","messageId":"185","endLine":24,"endColumn":19},{"ruleId":"182","severity":1,"message":"212","line":29,"column":19,"nodeType":"184","messageId":"185","endLine":29,"endColumn":29},{"ruleId":"182","severity":1,"message":"213","line":30,"column":21,"nodeType":"184","messageId":"185","endLine":30,"endColumn":33},{"ruleId":"182","severity":1,"message":"214","line":31,"column":25,"nodeType":"184","messageId":"185","endLine":31,"endColumn":41},{"ruleId":"182","severity":1,"message":"215","line":32,"column":30,"nodeType":"184","messageId":"185","endLine":32,"endColumn":51},{"ruleId":"182","severity":1,"message":"216","line":36,"column":19,"nodeType":"184","messageId":"185","endLine":36,"endColumn":29},{"ruleId":"182","severity":1,"message":"217","line":37,"column":17,"nodeType":"184","messageId":"185","endLine":37,"endColumn":25},{"ruleId":"182","severity":1,"message":"218","line":62,"column":13,"nodeType":"184","messageId":"185","endLine":62,"endColumn":14},{"ruleId":"182","severity":1,"message":"219","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"219","line":3,"column":27,"nodeType":"184","messageId":"185","endLine":3,"endColumn":36},{"ruleId":"182","severity":1,"message":"218","line":20,"column":13,"nodeType":"184","messageId":"185","endLine":20,"endColumn":14},{"ruleId":"182","severity":1,"message":"220","line":31,"column":9,"nodeType":"184","messageId":"185","endLine":31,"endColumn":19},{"ruleId":"182","severity":1,"message":"221","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"210","line":4,"column":25,"nodeType":"184","messageId":"185","endLine":4,"endColumn":30},{"ruleId":"182","severity":1,"message":"205","line":13,"column":9,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"220","line":40,"column":9,"nodeType":"184","messageId":"185","endLine":40,"endColumn":19},{"ruleId":"182","severity":1,"message":"208","line":3,"column":22,"nodeType":"184","messageId":"185","endLine":3,"endColumn":31},{"ruleId":"182","severity":1,"message":"222","line":15,"column":21,"nodeType":"184","messageId":"185","endLine":15,"endColumn":33},{"ruleId":"182","severity":1,"message":"223","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":20},{"ruleId":"182","severity":1,"message":"224","line":8,"column":10,"nodeType":"184","messageId":"185","endLine":8,"endColumn":20},{"ruleId":"182","severity":1,"message":"194","line":8,"column":22,"nodeType":"184","messageId":"185","endLine":8,"endColumn":33},{"ruleId":"182","severity":1,"message":"195","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":105,"column":13,"nodeType":"201","endLine":105,"endColumn":109},{"ruleId":"182","severity":1,"message":"191","line":2,"column":17,"nodeType":"184","messageId":"185","endLine":2,"endColumn":26},{"ruleId":"182","severity":1,"message":"192","line":2,"column":28,"nodeType":"184","messageId":"185","endLine":2,"endColumn":38},{"ruleId":"182","severity":1,"message":"193","line":2,"column":40,"nodeType":"184","messageId":"185","endLine":2,"endColumn":48},{"ruleId":"182","severity":1,"message":"221","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"224","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":20},{"ruleId":"182","severity":1,"message":"194","line":5,"column":22,"nodeType":"184","messageId":"185","endLine":5,"endColumn":33},{"ruleId":"182","severity":1,"message":"195","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":81,"column":10,"nodeType":"201","endLine":81,"endColumn":106},{"ruleId":"182","severity":1,"message":"209","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":16},{"ruleId":"182","severity":1,"message":"209","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":16},{"ruleId":"182","severity":1,"message":"219","line":3,"column":27,"nodeType":"184","messageId":"185","endLine":3,"endColumn":36},{"ruleId":"182","severity":1,"message":"221","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"225","line":4,"column":16,"nodeType":"184","messageId":"185","endLine":4,"endColumn":24},{"ruleId":"182","severity":1,"message":"226","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":16},{"ruleId":"182","severity":1,"message":"218","line":22,"column":21,"nodeType":"184","messageId":"185","endLine":22,"endColumn":22},{"ruleId":"182","severity":1,"message":"220","line":54,"column":11,"nodeType":"184","messageId":"185","endLine":54,"endColumn":21},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["227"],"no-negated-in-lhs",["228"],"'Header' is defined but never used.","'Component' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'_get' is defined but never used.","'Kashmir' is defined but never used.","'Tooltip' is defined but never used.","'OverlayTrigger' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Modal' is defined but never used.","'AddTrain' is defined but never used.","'history' is defined but never used.","'notify' is assigned a value but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'setid' is assigned a value but never used.","'settrainNo' is assigned a value but never used.","'settrainName' is assigned a value but never used.","'setsourceStation' is assigned a value but never used.","'setdestinationStation' is assigned a value but never used.","'setpayment' is assigned a value but never used.","'setpnrNo' is assigned a value but never used.","'e' is assigned a value but never used.","'useEffect' is defined but never used.","'handleShow' is assigned a value but never used.","'Link' is defined but never used.","'setclassType' is assigned a value but never used.","'userregister' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation"]